# -*- coding: utf-8 -*-
"""Grain_mask_creation.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/github/rdestenay/oldpicsrestoration/blob/master/Grain_mask_creation.ipynb
"""

import numpy as np
from PIL import Image, ImageFilter, ImageMath
import time
import matplotlib.pyplot as plt

def grain(size):
    gauss = Image.new("L", (size,size))
    gauss.putdata(np.random.randn(size**2)*255)
    gauss = gauss.resize((1024,1024))
    gauss = Image.blend(gauss, gauss.filter(ImageFilter.GaussianBlur(2)), 1)
    gauss = gauss.filter(ImageFilter.SHARPEN)
    return gauss

start = time.time()
imgarray = []
for i in range(10000):
    size = int(np.clip(np.random.randn()*200+700, a_min=400, a_max=1024))
    img = grain(size)
    img.save('{:s}/{:d}/{:06d}.jpg'.format("grains", 1024, i))
    for size in [512,256,128,64,32,16]:
        img = img.resize((size,size))
        img.save('{:s}/{:d}/{:06d}.jpg'.format("grains", size, i))
end = time.time()
(end - start)

f, axarr = plt.subplots(5, 2, figsize=(20,50))
axarr = axarr.ravel()
for i in range(10):
    axarr[i].imshow(imgarray[i])
plt.show()

